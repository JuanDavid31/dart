/*
 * Copyright (c) 2011-present Sonatype, Inc. All rights reserved.
 * Includes the third-party code listed at http://links.sonatype.com/products/clm/attributions.
 * "Sonatype" is a trademark of Sonatype, Inc.
 */
import * as PropTypes from 'prop-types';

const severityScorePropType = PropTypes.shape({
  source: PropTypes.oneOf([
    'cve_cvss_4',
    'cve_cvss_3',
    'cve_cvss_31',
    'cve_cvss_2',
    'sonatype_cvss_4',
    'sonatype_cvss_31',
    'sonatype_cvss_3',
    'sonatype_cvss_2',
    '',
  ]),
  sourceLabel: PropTypes.string,
  score: PropTypes.number.isRequired,
  vector: PropTypes.string,
});

export const vulnerabilityDetailsPropType = PropTypes.shape({
  identifier: PropTypes.string.isRequired,
  vulnerabilityLink: PropTypes.string,
  source: PropTypes.shape({
    longName: PropTypes.string,
    shortName: PropTypes.string,
  }),
  mainSeverity: severityScorePropType,
  severityScores: PropTypes.arrayOf(severityScorePropType.isRequired),
  weakness: PropTypes.shape({
    cweSource: PropTypes.string.isRequired,
    cweIds: PropTypes.arrayOf(
      PropTypes.shape({
        id: PropTypes.string.isRequired,
        uri: PropTypes.string.isRequired,
      }).isRequired
    ).isRequired,
  }),
  categories: PropTypes.arrayOf(PropTypes.string.isRequired),
  advisories: PropTypes.arrayOf(
    PropTypes.shape({
      referenceType: PropTypes.string,
      url: PropTypes.string,
    }).isRequired
  ),
  vulnerableVersionRanges: PropTypes.arrayOf(PropTypes.string),
  rootCauses: PropTypes.arrayOf(
    PropTypes.shape({
      listOfPaths: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,
      versionRange: PropTypes.string.isRequired,
    }).isRequired
  ),
  descriptionHtml: PropTypes.string,
  explanationHtml: PropTypes.string,
  detectionHtml: PropTypes.string,
  recommendationHtml: PropTypes.string,
  componentExplanationHtml: PropTypes.string,
  componentDetectionHtml: PropTypes.string,
  componentRecommendationHtml: PropTypes.string,
  customData: PropTypes.shape({
    remediation: PropTypes.string,
    cwe: PropTypes.string,
    cvssVector: PropTypes.string,
    cvssSeverity: PropTypes.number,
  }),
});

export const propTypes = {
  vulnerabilityDetails: vulnerabilityDetailsPropType.isRequired,
};
