/*
 * Copyright (c) 2011-present Sonatype, Inc. All rights reserved.
 * Includes the third-party code listed at http://links.sonatype.com/products/clm/attributions.
 * "Sonatype" is a trademark of Sonatype, Inc.
 */
import React from 'react';
import { any, eqBy, toLower } from 'ramda';

import MarkdownDetail from 'MainRoot/react/IqVulnerabilityDetails/details/MarkdownDetail';
import IssueDetail from 'MainRoot/react/IqVulnerabilityDetails/details/IssueDetail';
import SeverityDetail from 'MainRoot/react/IqVulnerabilityDetails/details/SeverityDetail';
import WeaknessDetail from 'MainRoot/react/IqVulnerabilityDetails/details/WeaknessDetail';
import SourceDetail from 'MainRoot/react/IqVulnerabilityDetails/details/SourceDetail';
import CategoriesDetail from 'MainRoot/react/IqVulnerabilityDetails/details/CategoriesDetail';
import DescriptionDetail from 'MainRoot/react/IqVulnerabilityDetails/details/DescriptionDetail';
import AdvisoriesDetail from 'MainRoot/react/IqVulnerabilityDetails/details/AdvisoriesDetail';
import CVSSDetail from 'MainRoot/react/IqVulnerabilityDetails/details/CVSSDetail';
import RootCauseDetail from 'MainRoot/react/IqVulnerabilityDetails/details/RootCauseDetail';
import VulnerableVersionRangesDetail from 'MainRoot/react/IqVulnerabilityDetails/details/VulnerableVersionRangesDetail';
import './SbomVulnerabilityDetails.scss';
import { vulnerabilityDetailsPropType } from 'MainRoot/react/IqVulnerabilityDetails/IqVulnerabilityDetailsPropTypes';
import { NxH2, NxInfoAlert, NxH3, NxP } from '@sonatype/react-shared-components';
import PropTypes from 'prop-types';
import classnames from 'classnames';

const MALICIOUS_CODE = 'malicious_code';

const SbomVulnerabilityDetails = ({ vulnerabilityDetails, componentName }) => {
  const categories = vulnerabilityDetails?.categories || [],
    hasMaliciousCodeCategory = any(eqBy(toLower, MALICIOUS_CODE), categories),
    maliciousCodeWarning = hasMaliciousCodeCategory ? 'Malicious Code' : null;

  return (
    <div className="sbom-vulnerability-details">
      <NxH2
        className={classnames(
          componentName ? 'sbom-vulnerability-details__no-bottom-margin' : null,
          'sbom-vulnerability-details__h2-no-customize-button'
        )}
      ></NxH2>
      {componentName && <span>{componentName}</span>}
      <div className=" nx-grid-row">
        <div className="nx-grid-col">
          <NxH2>
            <span className="sbom-vulnerability-details__vulnerability-id">{vulnerabilityDetails.identifier}</span>
          </NxH2>
          <IssueDetail
            key={vulnerabilityDetails.identifier}
            identifier={vulnerabilityDetails.identifier}
            vulnerabilityLink={vulnerabilityDetails.vulnerabilityLink}
            vulnIds={vulnerabilityDetails.vulnIds}
          />
          <SeverityDetail
            mainSeverity={vulnerabilityDetails.mainSeverity}
            customSeverity={vulnerabilityDetails.customData?.cvssSeverity}
            severityScores={vulnerabilityDetails.severityScores}
          />
          <WeaknessDetail weakness={vulnerabilityDetails.weakness} customCwe={vulnerabilityDetails.customData?.cweId} />
          <SourceDetail source={vulnerabilityDetails.source} />
          <CategoriesDetail categories={vulnerabilityDetails.categories} />
        </div>
        <div className="nx-grid-col">
          {vulnerabilityDetails.customData?.remediation && (
            <NxInfoAlert>
              <NxH3>Custom Remediation:</NxH3>
              <NxP>{vulnerabilityDetails.customData.remediation}</NxP>
            </NxInfoAlert>
          )}
          <DescriptionDetail source={vulnerabilityDetails.source} description={vulnerabilityDetails.description} />
          <MarkdownDetail
            title="Explanation"
            warning={maliciousCodeWarning}
            markdown={vulnerabilityDetails.explanationMarkdown}
            componentSpecificMarkdown={vulnerabilityDetails.componentExplanationMarkdown}
          />
          <MarkdownDetail
            title="Detection"
            markdown={vulnerabilityDetails.detectionMarkdown}
            componentSpecificMarkdown={vulnerabilityDetails.componentDetectionMarkdown}
          />
          <MarkdownDetail
            title="Recommendation"
            markdown={vulnerabilityDetails.recommendationMarkdown}
            componentSpecificMarkdown={vulnerabilityDetails.componentRecommendationMarkdown}
          />
          <VulnerableVersionRangesDetail vulnerableVersionRanges={vulnerabilityDetails.vulnerableVersionRanges} />
          <RootCauseDetail rootCauses={vulnerabilityDetails.rootCauses} />
          <AdvisoriesDetail advisories={vulnerabilityDetails.advisories} />
          <CVSSDetail severity={vulnerabilityDetails.mainSeverity} customData={vulnerabilityDetails.customData} />
        </div>
      </div>
    </div>
  );
};

SbomVulnerabilityDetails.propTypes = { vulnerabilityDetails: vulnerabilityDetailsPropType.isRequired };
SbomVulnerabilityDetails.propTypes.componentName = PropTypes.string;
export default SbomVulnerabilityDetails;
