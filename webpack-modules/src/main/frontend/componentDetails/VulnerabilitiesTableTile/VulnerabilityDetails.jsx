/*
 * Copyright (c) 2011-present Sonatype, Inc. All rights reserved.
 * Includes the third-party code listed at http://links.sonatype.com/products/clm/attributions.
 * "Sonatype" is a trademark of Sonatype, Inc.
 */
import React, { useEffect } from 'react';
import PropTypes from 'prop-types';
import IqVulnerabilityDetails from 'MainRoot/react/IqVulnerabilityDetails/IqVulnerabilityDetails';
import LoadWrapper from '../../react/LoadWrapper';

export default function VulnerabilityDetails(props) {
  const {
    loadVulnerabilityDetails,
    error,
    loading,
    details,
    componentName,
    componentIdentifier,
    ownerType,
    ownerId,
    hasEditIqPermission,
    componentHash,

    tabId,
    repositoryId,
    matchState,
    pathname,
    isFirewall,
  } = props;
  useEffect(() => {
    loadVulnerabilityDetails();
  }, []);

  return (
    <LoadWrapper {...{ error, loading }} retryHandler={loadVulnerabilityDetails}>
      {details && (
        <IqVulnerabilityDetails
          vulnerabilityDetails={details}
          componentName={componentName}
          componentIdentifier={componentIdentifier}
          ownerType={ownerType}
          ownerId={ownerId}
          showCustomizeButton={hasEditIqPermission}
          componentHash={componentHash}
          tabId={tabId}
          repositoryId={repositoryId}
          matchState={matchState}
          pathname={pathname}
          isFirewall={isFirewall}
        />
      )}
    </LoadWrapper>
  );
}

VulnerabilityDetails.propTypes = {
  loadVulnerabilityDetails: PropTypes.func.isRequired,
  loading: PropTypes.bool.isRequired,
  error: PropTypes.string,
  details: PropTypes.oneOfType([IqVulnerabilityDetails.propTypes.vulnerabilityDetails, PropTypes.oneOf([null])]),
  componentName: PropTypes.string,
  hasEditIqPermission: PropTypes.bool,
  componentHash: PropTypes.string,
  componentIdentifier: PropTypes.object,
  ownerType: PropTypes.string,
  ownerId: PropTypes.string,
  tabId: PropTypes.string,
  repositoryId: PropTypes.string,
  matchState: PropTypes.string,
  pathname: PropTypes.string,
  isFirewall: PropTypes.bool,
};
