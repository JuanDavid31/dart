/*
 * Copyright (c) 2011-present Sonatype, Inc. All rights reserved.
 * Includes the third-party code listed at http://links.sonatype.com/products/clm/attributions.
 * "Sonatype" is a trademark of Sonatype, Inc.
 */
import React from 'react';
import { NxStatefulForm, NxFormGroup, NxFormSelect, NxTextInput } from '@sonatype/react-shared-components';
import classNames from 'classnames';
import PropTypes from 'prop-types';

const SecurityVulnerabilityOverrideForm = ({
  doLoad,
  status,
  comments,
  showCommentField,
  loading,
  loadError,
  isDisabled,
  submitMaskState,
  saveError,
  setVulnerabilityOverrideStatus,
  setVulnerabilityOverrideComments,
  setVulnerabilityOverrideFormDisabled,
  saveVulnerabilityOverride,
}) => {
  const areCommentsDisabled = isDisabled && status === 'OPEN';

  const onChangeStatus = (evt) => {
    setVulnerabilityOverrideFormDisabled(false);
    const { selectedIndex, options } = evt.currentTarget;
    setVulnerabilityOverrideStatus(options[selectedIndex].value);
  };

  const onChangeComments = (value) => {
    setVulnerabilityOverrideFormDisabled(false);
    setVulnerabilityOverrideComments(value);
  };

  const onSubmit = () => {
    saveVulnerabilityOverride();
    setVulnerabilityOverrideFormDisabled(true);
  };

  const submitButtonClasses = classNames({ disabled: isDisabled, 'iq-disabled-submit': isDisabled });
  return (
    <NxStatefulForm
      onSubmit={onSubmit}
      submitBtnClasses={submitButtonClasses}
      submitMaskState={submitMaskState}
      submitError={saveError}
      submitBtnText="Save"
      loading={loading}
      doLoad={doLoad}
      loadError={loadError}
      validationErrors={comments.validationErrors}
      className="iq-security-vulnerability-override-form"
    >
      <NxFormGroup label="Status" isRequired>
        <NxFormSelect onChange={onChangeStatus} value={status} id="vulnerability-status-dropdown">
          <option value="OPEN">Open</option>
          <option value="ACKNOWLEDGED">Acknowledged</option>
          <option value="NOT_APPLICABLE">Not Applicable</option>
          <option value="CONFIRMED">Confirmed</option>
        </NxFormSelect>
      </NxFormGroup>
      {showCommentField && (
        <NxFormGroup label="Comments">
          <NxTextInput
            id="iq-vulnerability-override-comments"
            validatable={true}
            type="textarea"
            className="nx-text-input--long"
            maxLength="1000"
            onChange={onChangeComments}
            disabled={areCommentsDisabled}
            {...comments}
          />
        </NxFormGroup>
      )}
    </NxStatefulForm>
  );
};

const inputProptypes = {
  value: PropTypes.string,
  trimmedValue: PropTypes.string,
  isPristine: PropTypes.bool,
  validationErrors: PropTypes.string,
};

const securityOverrideFormProptypes = {
  status: PropTypes.string.isRequired,
  comments: PropTypes.shape(inputProptypes),
  showCommentField: PropTypes.bool.isRequired,
  loading: PropTypes.bool.isRequired,
  loadError: PropTypes.string,
  submitMaskState: PropTypes.bool,
  saveError: PropTypes.string,
  isDisabled: PropTypes.bool.isRequired,
};

SecurityVulnerabilityOverrideForm.proptypes = {
  ...securityOverrideFormProptypes,
  doLoad: PropTypes.func.isRequired,
  setVulnerabilityOverrideStatus: PropTypes.func.isRequired,
  setVulnerabilityOverrideComments: PropTypes.func.isRequired,
  setVulnerabilityOverrideFormDisabled: PropTypes.func.isRequired,
  saveVulnerabilityOverride: PropTypes.func.isRequired,
};

export default SecurityVulnerabilityOverrideForm;
