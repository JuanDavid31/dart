/*
 * Copyright (c) 2011-present Sonatype, Inc. All rights reserved.
 * Includes the third-party code listed at http://links.sonatype.com/products/clm/attributions.
 * "Sonatype" is a trademark of Sonatype, Inc.
 */
import { connect } from 'react-redux';

import { actions } from './vulnerabilitiesSlice';
import { selectShowVulnerabilityDetailPopover, selectVulnerabilityDetailsSlice } from './vulnerabilitiesSelectors';
import VulnerabilityDetailsPopover from './VulnerabilityDetailsPopover';
import { selectComponentDetails } from 'MainRoot/componentDetails/componentDetailsSelectors';
import {
  selectIsFirewall,
  selectIsFirewallOrRepository,
  selectRouteParamsFromSecurityTab,
  selectRouterCurrentParams,
} from 'MainRoot/reduxUiRouter/routerSelectors';
import {
  selectFirewallComponentDetailsPage,
  selectFirewallComponentDetailsPageRouteParams,
} from 'MainRoot/firewall/firewallSelectors';

function mapStateToProps(state) {
  const { details, error, loading } = selectVulnerabilityDetailsSlice(state);
  const isFirewall = selectIsFirewall(state);
  const isFirewallOrRepository = selectIsFirewallOrRepository(state);
  const applicationComponentDetails = selectComponentDetails(state);
  const { ownerId, isRepositoryComponent } = selectRouteParamsFromSecurityTab(state);
  const ownerType = isRepositoryComponent ? 'organization' : 'application';
  const firewallComponentDetailsPage = selectFirewallComponentDetailsPage(state);
  const firewallComponentDetailsPageParams = selectFirewallComponentDetailsPageRouteParams(state);
  const { tabId } = selectRouterCurrentParams(state);

  return {
    showVulnerabilityDetailPopover: selectShowVulnerabilityDetailPopover(state),
    details,
    error,
    loading,
    componentName: applicationComponentDetails?.name,
    componentIdentifier: isFirewallOrRepository
      ? firewallComponentDetailsPage?.componentDetails?.componentIdentifier
      : applicationComponentDetails?.componentIdentifier,
    ownerType: ownerType,
    ownerId: isRepositoryComponent ? 'ROOT_ORGANIZATION_ID' : ownerId,
    hasEditIqPermission: details?.hasEditIqPermission,
    componentHash: isFirewallOrRepository
      ? firewallComponentDetailsPage?.componentDetails?.hash
      : applicationComponentDetails?.hash,
    tabId,
    repositoryId: isFirewallOrRepository ? firewallComponentDetailsPageParams.repositoryId : null,
    matchState: isFirewallOrRepository ? firewallComponentDetailsPageParams?.matchState : null,
    pathname: isFirewallOrRepository ? firewallComponentDetailsPageParams?.pathname : null,
    isFirewall,
  };
}

const mapDispatchToProps = {
  loadVulnerabilityDetails: actions.loadVulnerabilityDetails,
  toggleVulnerabilityPopoverWithEffects: actions.toggleVulnerabilityPopoverWithEffects,
};

export const VulnerabilityDetailsPopoverContainer = connect(
  mapStateToProps,
  mapDispatchToProps
)(VulnerabilityDetailsPopover);
