/*
 * Copyright (c) 2019-present Sonatype, Inc.
 * This program and the accompanying materials are made available under
 * the terms of the Eclipse Public License 2.0 which accompanies this
 * distribution and is available at https://www.eclipse.org/legal/epl-2.0/.
 */
/* eslint react/prop-types: 0 */
import React from 'react';
import { all, filter, isEmpty, isNil, map, pipe } from 'ramda';
import { ReferenceTypeEnum } from '../types';
import DetailLink from './DetailLink';
import RenderDetail from './RenderDetail';
import SubDescriptionList from './SubDescriptionList';
function hasAllData(_a) {
    var referenceType = _a.referenceType, url = _a.url;
    return !!(referenceType && url);
}
function renderLinkWithLabel(_a) {
    var referenceType = _a.referenceType, url = _a.url;
    return referenceType && url ? (React.createElement(SubDescriptionList.Container, { key: "".concat(referenceType, ":").concat(url) },
        React.createElement(SubDescriptionList.Term, null, ReferenceTypeEnum[referenceType]),
        React.createElement(SubDescriptionList.Desc, null,
            React.createElement(DetailLink, { href: url }, url)))) : null;
}
var renderWithTypeLabels = function (links) {
    var renderedLinks = pipe(filter(hasAllData), map(renderLinkWithLabel))(links);
    return isEmpty(renderedLinks) ? null : (React.createElement(SubDescriptionList, null, renderedLinks));
};
function renderPlainLink(_a) {
    var url = _a.url;
    return url ? (React.createElement(DetailLink, { key: url, className: "nx-truncate-ellipsis", href: url }, url)) : null;
}
var renderPlainLinks = pipe(filter(hasAllData), map(renderPlainLink));
var hasUnknownType = function (_a) {
    var referenceType = _a.referenceType;
    var typeEnum = referenceType && ReferenceTypeEnum[referenceType];
    return isNil(typeEnum) || typeEnum === ReferenceTypeEnum.UNKNOWN;
};
var allTypesUnknown = all(hasUnknownType);
function renderReferenceLinks(links) {
    return allTypesUnknown(links) ? renderPlainLinks(links) : renderWithTypeLabels(links);
}
var AdvisoriesDetail = function AdvisoriesDetail(_a) {
    var advisories = _a.advisories;
    var referenceLinks = advisories && renderReferenceLinks(advisories);
    return isNil(referenceLinks) || isEmpty(referenceLinks) ? null : (React.createElement(RenderDetail, { title: "Advisories" }, referenceLinks));
};
export default AdvisoriesDetail;
//# sourceMappingURL=AdvisoriesDetail.js.map