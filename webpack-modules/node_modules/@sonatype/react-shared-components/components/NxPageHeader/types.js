var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as PropTypes from 'prop-types';
import { omit } from 'ramda';
import { propTypes as abstractNxPageHeaderPropTypes } from '../AbstractNxPageHeader/types';
export var propTypes = __assign(__assign({}, omit(['logo', 'productInfoContent'], abstractNxPageHeaderPropTypes)), { productInfo: PropTypes.shape({
        name: PropTypes.string.isRequired,
        version: PropTypes.string
    }), logo: PropTypes.shape({
        path: PropTypes.string.isRequired,
        alt: PropTypes.string.isRequired,
        darkModePath: PropTypes.string
    }) });
//# sourceMappingURL=types.js.map