var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
/*
 * Copyright (c) 2019-present Sonatype, Inc.
 * This program and the accompanying materials are made available under
 * the terms of the Eclipse Public License 2.0 which accompanies this
 * distribution and is available at https://www.eclipse.org/legal/epl-2.0/.
 */
import React, { useState } from 'react';
import NxCollapsibleMultiSelect from '../NxCollapsibleMultiSelect';
import { propTypes } from './types';
import useFuzzyFilter from '../../../../util/useFuzzyFilter';
var NxStatefulCollapsibleMultiSelect = function NxStatefulCollapsibleMultiSelect(props) {
    var options = props.options, isOpenInitialState = !!props.isOpen;
    var _a = useState(isOpenInitialState), isOpen = _a[0], toggleOpen = _a[1], onToggleCollapse = function () {
        toggleOpen(!isOpen);
    };
    var _b = useFuzzyFilter(options, { keys: ['name'], threshold: 0.1 }), filteredOptions = _b[0], filter = _b[1], setFilter = _b[2];
    return React.createElement(NxCollapsibleMultiSelect, __assign({}, props, { isOpen: isOpen, onToggleCollapse: onToggleCollapse, filteredOptions: filteredOptions, onFilterChange: setFilter, filter: filter }));
};
NxStatefulCollapsibleMultiSelect.propTypes = propTypes;
export default NxStatefulCollapsibleMultiSelect;
//# sourceMappingURL=NxStatefulCollapsibleMultiSelect.js.map